{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/elena/OneDrive/Documentos/GitHub/LSPBack/Subscriptions/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./stripe.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"cardInfo\"];\n\nfunction AppComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.cardError, \" \");\n  }\n}\n\nexport class AppComponent {\n  constructor(ngZone, stripeService) {\n    this.ngZone = ngZone;\n    this.stripeService = stripeService;\n  }\n\n  title(title) {\n    throw new Error('Method not implemented.');\n  }\n\n  ngAfterViewInit() {\n    this.card = elements.create('card');\n    this.card.mount(this.cardInfo.nativeElement);\n    this.card.addEventListener('change', this.onChange.bind(this));\n  }\n\n  onChange({\n    error\n  }) {\n    if (error) {\n      this.ngZone.run(() => this.cardError = error.message);\n    } else {\n      this.ngZone.run(() => this.cardError = '');\n    }\n  }\n\n  onClick() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        token,\n        error\n      } = yield stripe.createToken(_this.card);\n\n      if (token) {\n        const response = yield _this.stripeService.charge(100, token.id);\n        console.log(response);\n      } else {\n        _this.ngZone.run(() => _this.cardError = error.message);\n      }\n    })();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.StripeService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cardInfo = _t.first);\n    }\n  },\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"credit-card\"], [\"cardInfo\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [3, \"click\"], [1, \"error\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\");\n      i0.ɵɵelement(2, \"div\", null, 1);\n      i0.ɵɵtemplate(4, AppComponent_div_4_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵtext(6, \"Pagar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardError);\n    }\n  },\n  directives: [i2.NgIf],\n  styles: [\".credit-card[_ngcontent-%COMP%]{\\r\\n  width: 400px;\\r\\n  height: 50px;\\r\\n  border: 1px solid black;\\r\\n  padding: 20px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: space-evenly;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsNkJBQTZCO0FBQy9CIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNyZWRpdC1jYXJke1xyXG4gIHdpZHRoOiA0MDBweDtcclxuICBoZWlnaHQ6IDUwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\elena\\OneDrive\\Documentos\\GitHub\\LSPBack\\Subscriptions\\src\\app\\app.component.ts","C:\\Users\\elena\\OneDrive\\Documentos\\GitHub\\LSPBack\\Subscriptions\\src\\app\\app.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, ElementRef, NgZone, ViewChild } from '@angular/core';\r\nimport { StripeService } from './stripe.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit{\r\n  \r\n  title(title:any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  @ViewChild('cardInfo')\r\n  cardInfo!: ElementRef;\r\n  cardError!: string;\r\n  card: any;\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private stripeService: StripeService\r\n    ){ }\r\n\r\n  ngAfterViewInit(){\r\n    this.card = elements.create('card');\r\n    this.card.mount(this.cardInfo.nativeElement);\r\n    this.card.addEventListener('change', this.onChange.bind(this));\r\n  }\r\n\r\n  onChange({error} : {error: any}){\r\n    if (error){\r\n      this.ngZone.run(()=> this.cardError=error.message);\r\n    } else {\r\n      this.ngZone.run(()=> this.cardError='');\r\n    }\r\n  }\r\n\r\n  async onClick(){\r\n    const {token, error} = await stripe.createToken(this.card);\r\n    if (token){\r\n     const response = await this.stripeService.charge(100, token.id);\r\n     console.log(response);\r\n    } else {\r\n      this.ngZone.run(()=> this.cardError=error.message);\r\n    }\r\n  }\r\n  \r\n}","<div class=\"credit-card\">\n  <div>\n    <div #cardInfo></div>\n    <div class=\"error\" *ngIf=\"cardError\">\n      {{cardError}}\n\n    </div>\n  </div>\n  <button (click)=\"onClick()\">Pagar</button>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}